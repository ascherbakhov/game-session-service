[tool.poetry]
name = "sessionsserver"
version = "0.1.0"
description = "The Session Server is a lightweight microservice for managing user sessions across multiple platforms. Built with FastAPI and SQLAlchemy, it provides APIs for creating, updating, and terminating sessions."
authors = ["ascherbakhov <a.scherbakhov@gmail.com>"]
license = "Apache License 2.0"
readme = "README.md"
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = "^3.12"
annotated-types = "0.7.0"
click = "8.1.7"
fastapi = "0.115.2"
h11 = "0.14.0"
httptools = "0.6.4"
idna = "3.10"
pydantic = "2.9.2"
pydantic-core = "2.23.4"
python-dotenv = "1.0.1"
pyyaml = "6.0.2"
sniffio = "1.3.1"
starlette = "0.40.0"
typing-extensions = "4.12.2"
uvicorn = "0.32.0"
uvloop = "0.21.0"
watchfiles = "0.24.0"
websockets = "13.1"
sqlalchemy = "2.0.3"
alembic = "1.13.3"
aiosqlite = "0.20.0"
celery = "5.4.0"
greenlet = "3.1.1"
asyncpg = "0.30.0"
psycopg2-binary = "2.9.10"
pydantic-settings = "^2.6.1"
python-jose = "^3.3.0"
passlib = "^1.7.4"
python-multipart = "^0.0.17"
bcrypt = "4.0.1"
aioprometheus = "^23.12.0"
prometheus-fastapi-instrumentator = "^7.0.0"
prometheus-client = "^0.21.1"
fastapi-limiter = "^0.1.6"
redis = "^5.2.0"


[tool.poetry.group.dev.dependencies]
httpx = "0.27.2"
pytest-asyncio = "0.24.0"
pytest = "8.3.3"
coverage = "7.3.1"
isort = "5.12.0"
factory-boy = "^3.3.1"
ruff = "^0.8.2"
bandit = "^1.8.0"
pylint = "^3.3.2"
graphviz = "^0.20.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start-api = "app.manage:start_api"
start-celery-worker = "app.manage:start_celery_worker"
start-celery-beat = "app.manage:start_celery_beat"
reset-db = "app.manage:reset_database"


[tool.ruff]
line-length = 120
target-version = "py312"


[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
markers = [
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
]
filterwarnings = [
    "ignore::DeprecationWarning:sqlalchemy.*",
    "ignore::PendingDeprecationWarning:starlette.*",
    "ignore::DeprecationWarning:passlib.*",
    "ignore:The 'app' shortcut is now deprecated:DeprecationWarning:httpx.*",
    "ignore:datetime.datetime.utcnow.*:DeprecationWarning:jose.*",
    "ignore:Call to deprecated close:DeprecationWarning:fastapi_limiter"
]